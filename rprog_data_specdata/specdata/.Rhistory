1+1
2-1
3//4
3/4
q()
install.packages("swirl")
library(swirl)
swirl()
5+7
x <- 5 + 7
x
y <- x - 3
y
z <- c(1.1, 9, 3.14)
?c
z
c(z, 555, z)
z * 2 + 100
my_sqrt <- sqrt(z - 1)
my_sqrt
my_div <- z / my_sqrt
my_div
c(1, 2, 3, 4) + c(0, 10)
c(1, 2, 3, 4) + c(0, 10, 100)
z * 2 + 1000
my_div
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
filename <- vector(mode="character", length=length(id))
for(i in seq_along(id)) {
x <- id[i]
id_string <- toString(x)
if (x >= 1 && x <= 9) {
monitor <- paste("00", id_string, ".csv", sep="")
}
else if (x >= 10 && x <= 99) {
id_string <- toString(x)
monitor <- paste("0", id_string, ".csv", sep="")
}
else {
id_string <- toString(x)
monitor <- paste(id_string, ".csv", sep="")
}
filename[i] <- monitor
print(monitor)
}
accumulator <- 0
total <- 0
for(i in filename) {
airquality <- read.csv(i)
good <- complete.cases(airquality[pollutant])
#good <- complete.cases(airquality[[pollutant]])
airquality <- airquality[good, ]
total <- total + nrow(airquality)
#accumulator <- accumulator + sum(airquality[pollutant], na.rm = TRUE)
# We need [[]] around pollutant instead of [] since airquality[pollutant]
# is a data.frame but we need a vector here. Please note that using either
#[[]] or [] gives the same results as the test cases but only [[]] successfully
#passes the submit() script
accumulator <- accumulator + sum(airquality[[pollutant]], na.rm = TRUE)
}
accumulator/total
}
source("pollutantmean.R")
setwd("C:/Users/IBM_ADMIN/GitHub/RProgrammingclass/rprog_data_specdata")
setwd("C:/Users/IBM_ADMIN/GitHub/RProgrammingclass/rprog_data_specdata/specdata")
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "nitrate", 23)
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
filename <- vector(mode="character", length=length(id))
for(i in seq_along(id)) {
x <- id[i]
id_string <- toString(x)
if (x >= 1 && x <= 9) {
monitor <- paste("00", id_string, ".csv", sep="")
}
else if (x >= 10 && x <= 99) {
id_string <- toString(x)
monitor <- paste("0", id_string, ".csv", sep="")
}
else {
id_string <- toString(x)
monitor <- paste(id_string, ".csv", sep="")
}
filename[i] <- monitor
print(monitor)
}
accumulator <- 0
total <- 0
for(i in filename) {
airquality <- read.csv(i)
good <- complete.cases(airquality[pollutant])
#good <- complete.cases(airquality[[pollutant]])
airquality <- airquality[good, ]
total <- total + nrow(airquality)
#accumulator <- accumulator + sum(airquality[pollutant], na.rm = TRUE)
# We need [[]] around pollutant instead of [] since airquality[pollutant]
# is a data.frame but we need a vector here. Please note that using either
#[[]] or [] gives the same results as the test cases but only [[]] successfully
#passes the submit() script
accumulator <- accumulator + sum(airquality[[pollutant]], na.rm = TRUE)
}
accumulator/total
return(round(result, 3))
}
pollutantmean("specdata", "nitrate", 23)
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
filename <- vector(mode="character", length=length(id))
for(i in seq_along(id)) {
x <- id[i]
id_string <- toString(x)
if (x >= 1 && x <= 9) {
monitor <- paste("00", id_string, ".csv", sep="")
}
else if (x >= 10 && x <= 99) {
id_string <- toString(x)
monitor <- paste("0", id_string, ".csv", sep="")
}
else {
id_string <- toString(x)
monitor <- paste(id_string, ".csv", sep="")
}
filename[i] <- monitor
print(monitor)
}
accumulator <- 0
total <- 0
for(i in filename) {
airquality <- read.csv(i)
good <- complete.cases(airquality[pollutant])
#good <- complete.cases(airquality[[pollutant]])
airquality <- airquality[good, ]
total <- total + nrow(airquality)
#accumulator <- accumulator + sum(airquality[pollutant], na.rm = TRUE)
# We need [[]] around pollutant instead of [] since airquality[pollutant]
# is a data.frame but we need a vector here. Please note that using either
#[[]] or [] gives the same results as the test cases but only [[]] successfully
#passes the submit() script
accumulator <- accumulator + sum(airquality[[pollutant]], na.rm = TRUE)
}
accumulator/total
}
pollutantmean("specdata", "nitrate", 23)
source('C:/Users/IBM_ADMIN/GitHub/RProgrammingclass/rprog_data_specdata/pollutant.R')
> pollutantmean("specdata", "nitrate", 23)
source('C:/Users/IBM_ADMIN/GitHub/RProgrammingclass/rprog_data_specdata/pollutant.R')
> pollutantmean("specdata", "nitrate", 23)
source('C:/Users/IBM_ADMIN/GitHub/RProgrammingclass/rprog_data_specdata/pollutant.R')
> pollutantmean("specdata", "nitrate", 23)
pollutantmean <- function(directory, pollutant = "sulfate", id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
# set working directory
if(grep("specdata", directory) == 1) {
directory <- ("./specdata/")
}
# initialize a vector to hold the pollutant data
mean_vector <- c()
# find all files in the specdata folder
all_files <- as.character( list.files(directory) )
file_paths <- paste(directory, all_files, sep="")
for(i in id) {
current_file <- read.csv(file_paths[i], header=T, sep=",")
head(current_file)
pollutant
na_removed <- current_file[!is.na(current_file[, pollutant]), pollutant]
mean_vector <- c(mean_vector, na_removed)
}
result <- mean(mean_vector)
return(round(result, 3))
}
pollutantmean("specdata", "sulfate", 1:10)
> pollutantmean("specdata", "nitrate", 23)
source('C:/Users/IBM_ADMIN/GitHub/RProgrammingclass/rprog_data_specdata/pollutant.R')
pollutantmean("specdata", "nitrate", 23)
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
source('C:/Users/IBM_ADMIN/GitHub/RProgrammingclass/rprog_data_specdata/pollutant.R')
pollutantmean("specdata", "nitrate", 70:72)
source('C:/Users/IBM_ADMIN/GitHub/RProgrammingclass/rprog_data_specdata/pollutant.R')
pollutantmean("specdata", "nitrate", 70:72)
source('C:/Users/IBM_ADMIN/GitHub/RProgrammingclass/rprog_data_specdata/pollutant.R')
pollutantmean("specdata", "nitrate", 70:72)
source('C:/Users/IBM_ADMIN/GitHub/RProgrammingclass/rprog_data_specdata/pollutant.R')
pollutantmean("specdata", "nitrate", 70:72)
source('C:/Users/IBM_ADMIN/GitHub/RProgrammingclass/rprog_data_specdata/pollutant.R')
pollutantmean("specdata", "nitrate", 70:72)
source('C:/Users/IBM_ADMIN/GitHub/RProgrammingclass/rprog_data_specdata/pollutant.R')
source('C:/Users/IBM_ADMIN/GitHub/RProgrammingclass/rprog_data_specdata/pollutant.R')
pollutantmean("specdata", "nitrate", 70:72)
source('C:/Users/IBM_ADMIN/GitHub/RProgrammingclass/rprog_data_specdata/pollutant.R')
pollutantmean("specdata", "nitrate", 70:72)
source('C:/Users/IBM_ADMIN/GitHub/RProgrammingclass/rprog_data_specdata/pollutant.R')
source('C:/Users/IBM_ADMIN/GitHub/RProgrammingclass/rprog_data_specdata/pollutant.R')
pollutantmean("specdata", "nitrate", 70:72)
source('C:/Users/IBM_ADMIN/GitHub/RProgrammingclass/rprog_data_specdata/pollutant.R')
pollutantmean("specdata", "nitrate", 70:72)
source('C:/Users/IBM_ADMIN/GitHub/RProgrammingclass/rprog_data_specdata/pollutant.R')
pollutantmean("specdata", "nitrate", 70:72)
source('C:/Users/IBM_ADMIN/GitHub/RProgrammingclass/rprog_data_specdata/pollutant.R')
pollutantmean("specdata", "nitrate", 70:72)
source('C:/Users/IBM_ADMIN/GitHub/RProgrammingclass/rprog_data_specdata/pollutant.R')
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 23)
source('C:/Users/IBM_ADMIN/GitHub/RProgrammingclass/rprog_data_specdata/pollutant.R')
pollutantmean("specdata", "nitrate", 23)
pollutantmean("specdata", "nitrate", 23)
pollutantmean("specdata", "sulfate", 1:10)
source('C:/Users/IBM_ADMIN/GitHub/RProgrammingclass/rprog_data_specdata/pollutant.R')
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 23)
source('C:/Users/IBM_ADMIN/GitHub/RProgrammingclass/rprog_data_specdata/pollutant.R')
pollutantmean("specdata", "nitrate", 70:72)
source('C:/Users/IBM_ADMIN/GitHub/RProgrammingclass/rprog_data_specdata/pollutant.R')
pollutantmean("specdata", "nitrate", 70:72)
source('C:/Users/IBM_ADMIN/GitHub/RProgrammingclass/rprog_data_specdata/pollutant.R')
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "nitrate", 23)
pollutantmean("specdata", "sulfate", 1:10)
source('C:/Users/IBM_ADMIN/GitHub/RProgrammingclass/rprog_data_specdata/pollutant.R')
pollutantmean("specdata", "sulfate", 1:10)
source('C:/Users/IBM_ADMIN/GitHub/RProgrammingclass/rprog_data_specdata/pollutant.R')
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 23)
pollutantmean("specdata", "nitrate", 70:72)
source('C:/Users/IBM_ADMIN/GitHub/RProgrammingclass/rprog_data_specdata/pollutant.R')
pollutantmean("specdata", "nitrate", 70:72)
source('C:/Users/IBM_ADMIN/GitHub/RProgrammingclass/rprog_data_specdata/pollutant.R')
source('C:/Users/IBM_ADMIN/GitHub/RProgrammingclass/rprog_data_specdata/pollutant.R')
source('C:/Users/IBM_ADMIN/GitHub/RProgrammingclass/rprog_data_specdata/pollutant.R')
source('C:/Users/IBM_ADMIN/GitHub/RProgrammingclass/rprog_data_specdata/pollutant.R')
source('C:/Users/IBM_ADMIN/GitHub/RProgrammingclass/rprog_data_specdata/pollutant.R')
pollutantmean("specdata", "nitrate", 70:72)
source('C:/Users/IBM_ADMIN/GitHub/RProgrammingclass/rprog_data_specdata/pollutant.R')
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "nitrate", 1)
source('C:/Users/IBM_ADMIN/GitHub/RProgrammingclass/rprog_data_specdata/complet.R')
complete("specdata", 1)
source('C:/Users/IBM_ADMIN/GitHub/RProgrammingclass/rprog_data_specdata/complete.R')
complete("specdata", c(2, 4, 8, 10, 12))
source('C:/Users/IBM_ADMIN/GitHub/RProgrammingclass/rprog_data_specdata/complete.R')
complete("specdata", 1)
source('C:/Users/IBM_ADMIN/GitHub/RProgrammingclass/rprog_data_specdata/complete.R')
source('C:/Users/IBM_ADMIN/GitHub/RProgrammingclass/rprog_data_specdata/complete.R')
source('C:/Users/IBM_ADMIN/GitHub/RProgrammingclass/rprog_data_specdata/complete.R')
complete("specdata", 1)
complete
source('C:/Users/IBM_ADMIN/GitHub/RProgrammingclass/rprog_data_specdata/complete.R')
complete("specdata", 1)
source('C:/Users/IBM_ADMIN/GitHub/RProgrammingclass/rprog_data_specdata/complete.R')
complete("specdata", 1)
source('C:/Users/IBM_ADMIN/GitHub/RProgrammingclass/rprog_data_specdata/complete.R')
complete("specdata", 1)
complete <- function(directory, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return a data frame of the form:
## id nobs
## 1  117
## 2  1041
## ...
## where 'id' is the monitor ID number and 'nobs' is the
## number of complete cases
# set working directory
if(grep("specdata", directory) == 1) {
directory <- ("./specdata/")
}
# get the length of id vector
id_len <- length(id)
complete_data <- rep(0, id_len)
# find all files in the specdata folder
all_files <- as.character( list.files(directory) )
file_paths <- paste(directory, all_files, sep="")
j <- 1
for (i in id) {
current_file <- read.csv(file_paths[i], header=T, sep=",")
complete_data[j] <- sum(complete.cases(current_file))
j <- j + 1
}
result <- data.frame(id = id, nobs = complete_data)
return(result)
}
# tests
complete("specdata", 1)
complete("specdata", c(2, 4, 8, 10, 12))
complete("specdata", 30:25)
source('C:/Users/IBM_ADMIN/GitHub/RProgrammingclass/rprog_data_specdata/complete.R')
complete("specdata", 1)
source('C:/Users/IBM_ADMIN/GitHub/RProgrammingclass/rprog_data_specdata/complete2.R')
complete("specdata", 1)
source('C:/Users/IBM_ADMIN/GitHub/RProgrammingclass/rprog_data_specdata/complete2.R')
complete("specdata", 1)
source('C:/Users/IBM_ADMIN/GitHub/RProgrammingclass/rprog_data_specdata/complete2.R')
complete("specdata", 1)
source('C:/Users/IBM_ADMIN/GitHub/RProgrammingclass/rprog_data_specdata/complete2.R')
complete("specdata", 1)
source('C:/Users/IBM_ADMIN/GitHub/RProgrammingclass/rprog_data_specdata/complete2.R')
complete("specdata", 1)
source('C:/Users/IBM_ADMIN/GitHub/RProgrammingclass/rprog_data_specdata/complete2.R')
complete("specdata", 1)
source('C:/Users/IBM_ADMIN/GitHub/RProgrammingclass/rprog_data_specdata/complete2.R')
complete("specdata", 1)
source('C:/Users/IBM_ADMIN/GitHub/RProgrammingclass/rprog_data_specdata/complete2.R')
complete("specdata", c(2, 4, 8, 10, 12))
source('C:/Users/IBM_ADMIN/GitHub/RProgrammingclass/rprog_data_specdata/complete2.R')
complete("specdata", c(2, 4, 8, 10, 12))
source('C:/Users/IBM_ADMIN/GitHub/RProgrammingclass/rprog_data_specdata/complete2.R')
complete("specdata", c(2, 4, 8, 10, 12))
complete("specdata", 30:25)
complete("specdata", 3)
source('C:/Users/IBM_ADMIN/GitHub/RProgrammingclass/rprog_data_specdata/complete2.R')
complete("specdata", 3)
source('C:/Users/IBM_ADMIN/GitHub/RProgrammingclass/rprog_data_specdata/complete2.R')
complete("specdata", 3)
source('C:/Users/IBM_ADMIN/GitHub/RProgrammingclass/rprog_data_specdata/complete2.R')
complete("specdata", 3)
source('C:/Users/IBM_ADMIN/GitHub/RProgrammingclass/rprog_data_specdata/complete2.R')
complete("specdata", 3)
source('C:/Users/IBM_ADMIN/GitHub/RProgrammingclass/rprog_data_specdata/complete2.R')
complete("specdata", 3)
source('C:/Users/IBM_ADMIN/GitHub/RProgrammingclass/rprog_data_specdata/complete2.R')
complete("specdata", 3)
source('C:/Users/IBM_ADMIN/GitHub/RProgrammingclass/rprog_data_specdata/complete2.R')
source('C:/Users/IBM_ADMIN/GitHub/RProgrammingclass/rprog_data_specdata/complete.R')
complete("specdata", 3)
complete("specdata", c(2, 4, 8, 10, 12))
complete("specdata", 30:25)
source('C:/Users/IBM_ADMIN/GitHub/RProgrammingclass/rprog_data_specdata/complete.R')
source('C:/Users/IBM_ADMIN/GitHub/RProgrammingclass/rprog_data_specdata/core.R')
cr <- corr("specdata", 400)
head(cr)
summary(cr)
source('C:/Users/IBM_ADMIN/GitHub/RProgrammingclass/rprog_data_specdata/core.R')
cr <- corr("specdata", 150)
head(cr)
summary(cr)
source('C:/Users/IBM_ADMIN/GitHub/RProgrammingclass/rprog_data_specdata/coren.R')
cr <- corr("specdata", 150)
head(cr)
summary(cr)
source('C:/Users/IBM_ADMIN/GitHub/RProgrammingclass/rprog_data_specdata/coren.R')
cr <- corr("specdata", 150)
head(cr)
source('C:/Users/IBM_ADMIN/GitHub/RProgrammingclass/rprog_data_specdata/coren.R')
cr <- corr("specdata", 150)
source('C:/Users/IBM_ADMIN/GitHub/RProgrammingclass/rprog_data_specdata/core.R')
cr <- corr("specdata", 150)
source('C:/Users/IBM_ADMIN/GitHub/RProgrammingclass/rprog_data_specdata/coren.R')
cr <- corr("specdata", 150)
head(cr)
summary(cr)
source('C:/Users/IBM_ADMIN/GitHub/RProgrammingclass/rprog_data_specdata/coren.R')
cr <- corr("specdata", 150)
head(cr)
summary(cr)
source('C:/Users/IBM_ADMIN/GitHub/RProgrammingclass/rprog_data_specdata/coren.R')
cr <- corr("specdata", 150)
head(cr)
summary(cr)
cr <- corr("specdata", 400)
head(cr)
source('C:/Users/IBM_ADMIN/GitHub/RProgrammingclass/rprog_data_specdata/coren.R')
cr <- corr("specdata", 400)
head(cr)
summary(cr)
source('C:/Users/IBM_ADMIN/GitHub/RProgrammingclass/rprog_data_specdata/coren.R')
cr <- corr("specdata", 400)
head(cr)
summary(cr)
source('C:/Users/IBM_ADMIN/GitHub/RProgrammingclass/rprog_data_specdata/coren.R')
cr <- corr("specdata", 400)
head(cr)
summary(cr)
cr
source('C:/Users/IBM_ADMIN/GitHub/RProgrammingclass/rprog_data_specdata/coren.R')
cr <- corr("specdata", 400)
head(cr)
summary(cr)
cr <- corr("specdata", 5000)
summary(cr)
length(cr)
cr <- corr("specdata")
summary(cr)
length(cr)
source('C:/Users/IBM_ADMIN/GitHub/RProgrammingclass/rprog_data_specdata/coren.R')
cr <- corr("specdata", 5000)
summary(cr)
cr <- corr("specdata")
summary(cr)
source('C:/Users/IBM_ADMIN/GitHub/RProgrammingclass/rprog_data_specdata/coren.R')
cr <- corr("specdata")
summary(cr)
source('C:/Users/IBM_ADMIN/GitHub/RProgrammingclass/rprog_data_specdata/coren.R')
cr <- corr("specdata")
summary(cr)
source('C:/Users/IBM_ADMIN/GitHub/RProgrammingclass/rprog_data_specdata/coren.R')
cr <- corr("specdata")
summary(cr)
source('C:/Users/IBM_ADMIN/GitHub/RProgrammingclass/rprog_data_specdata/coren.R')
cr <- corr("specdata")
summary(cr)
length(cr)
source('C:/Users/IBM_ADMIN/GitHub/RProgrammingclass/rprog_data_specdata/coren.R')
cr <- corr("specdata")
summary(cr)
source('C:/Users/IBM_ADMIN/GitHub/RProgrammingclass/rprog_data_specdata/coren.R')
cr <- corr("specdata")
summary(cr)
source('C:/Users/IBM_ADMIN/GitHub/RProgrammingclass/rprog_data_specdata/coren.R')
cr <- corr("specdata")
summary(cr)
?cor
source('C:/Users/IBM_ADMIN/GitHub/RProgrammingclass/rprog_data_specdata/coren.R')
cr <- corr("specdata")
summary
summary(cr)
source('C:/Users/IBM_ADMIN/GitHub/RProgrammingclass/rprog_data_specdata/coren.R')
cr <- corr("specdata")
summary(cr)
source('C:/Users/IBM_ADMIN/GitHub/RProgrammingclass/rprog_data_specdata/coretest.R')
cr <- corr("specdata")
source('C:/Users/IBM_ADMIN/GitHub/RProgrammingclass/rprog_data_specdata/coren.R')
cr <- corr("specdata")
summary(cr)
source('C:/Users/IBM_ADMIN/GitHub/RProgrammingclass/rprog_data_specdata/coren.R')
cr <- corr("specdata")
summary(cr)
source('C:/Users/IBM_ADMIN/GitHub/RProgrammingclass/rprog_data_specdata/coren.R')
cr <- corr("specdata")
source('C:/Users/IBM_ADMIN/GitHub/RProgrammingclass/rprog_data_specdata/coren.R')
cr <- corr("specdata")
summary(cr)
source('C:/Users/IBM_ADMIN/GitHub/RProgrammingclass/rprog_data_specdata/coren.R')
cr <- corr("specdata")
source('C:/Users/IBM_ADMIN/GitHub/RProgrammingclass/rprog_data_specdata/coren.R')
cr <- corr("specdata")
summary(cr)
length(cr)
